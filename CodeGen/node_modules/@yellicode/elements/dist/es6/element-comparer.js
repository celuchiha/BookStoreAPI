/*
 * Copyright (c) 2019 Yellicode
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
import * as Interfaces from "./interfaces";
import { isFeature } from './utils';
const NO_ORDER = 0;
export class ElementComparerImpl {
    static getInstance() {
        if (!ElementComparerImpl.instance) {
            ElementComparerImpl.instance = new ElementComparerImpl();
        }
        return ElementComparerImpl.instance;
    }
    compareOrderedElements(x, y) {
        // We use a value of 0 (NO_ORDER) for elements having no order at all.
        // An order of NO_ORDER comes after a set order		
        var xOrder = x.order || NO_ORDER;
        var yOrder = y.order || NO_ORDER;
        if (xOrder === NO_ORDER && yOrder !== NO_ORDER) {
            return 1;
        }
        if (yOrder === NO_ORDER && xOrder !== NO_ORDER) {
            return -1;
        }
        // Both have an order
        const result = xOrder - yOrder;
        if (result !== 0)
            return result;
        // Both have the same order. Fallback by name for features (operations and properties), this is what we also do  
        // in the modeler. For enum members and parameters: keep the order as is.
        return isFeature(x) ? x.name.localeCompare(y.name) : 0;
    }
    comparePackageableElements(x, y) {
        // Packages first
        if (x.elementType === Interfaces.ElementType.package) {
            if (y.elementType !== Interfaces.ElementType.package) {
                // x is a package, y isn't
                return -1;
            }
        }
        else if (y.elementType === Interfaces.ElementType.package) {
            // x is not a package, y is
            return 1;
        }
        // Then compare by name
        return x.name.localeCompare(y.name);
    }
    static haveEqualSignatures(x, y) {
        if (x.name !== y.name)
            return false;
        // Same name
        if (x.ownedParameters.length !== y.ownedParameters.length) {
            return false;
        }
        // Same number of parameters
        if (x.ownedParameters.length === 0)
            return true;
        // Same number of parameters (> 0)
        for (let i = 0, len = x.ownedParameters.length; i < len; i++) {
            const typeOfParamX = x.ownedParameters[i].type;
            const typeOfParamY = y.ownedParameters[i].type;
            if (typeOfParamX !== typeOfParamY)
                return false;
        }
        return true;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudC1jb21wYXJlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbGVtZW50LWNvbXBhcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILE9BQU8sS0FBSyxVQUFVLE1BQU0sY0FBYyxDQUFDO0FBRTNDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFcEMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxDQUFDO0FBRW5CLE1BQU07SUFJRixNQUFNLENBQUMsV0FBVztRQUNkLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxRQUFRLEVBQUU7WUFDL0IsbUJBQW1CLENBQUMsUUFBUSxHQUFHLElBQUksbUJBQW1CLEVBQUUsQ0FBQztTQUM1RDtRQUNELE9BQU8sbUJBQW1CLENBQUMsUUFBUSxDQUFDO0lBQ3hDLENBQUM7SUFFTSxzQkFBc0IsQ0FBdUUsQ0FBVyxFQUFFLENBQVc7UUFDeEgsc0VBQXNFO1FBQ3RFLGlEQUFpRDtRQUNqRCxJQUFJLE1BQU0sR0FBRyxDQUFDLENBQUMsS0FBSyxJQUFJLFFBQVEsQ0FBQztRQUNqQyxJQUFJLE1BQU0sR0FBRyxDQUFDLENBQUMsS0FBSyxJQUFJLFFBQVEsQ0FBQztRQUNqQyxJQUFJLE1BQU0sS0FBSyxRQUFRLElBQUksTUFBTSxLQUFLLFFBQVEsRUFBRTtZQUM1QyxPQUFPLENBQUMsQ0FBQztTQUNaO1FBQ0QsSUFBSSxNQUFNLEtBQUssUUFBUSxJQUFJLE1BQU0sS0FBSyxRQUFRLEVBQUU7WUFDNUMsT0FBTyxDQUFDLENBQUMsQ0FBQztTQUNiO1FBQ0QscUJBQXFCO1FBQ3JCLE1BQU0sTUFBTSxHQUFHLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDL0IsSUFBSSxNQUFNLEtBQUssQ0FBQztZQUFFLE9BQU8sTUFBTSxDQUFDO1FBQ2hDLGlIQUFpSDtRQUNqSCx5RUFBeUU7UUFDekUsT0FBTyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFFTSwwQkFBMEIsQ0FBaUQsQ0FBVyxFQUFFLENBQVc7UUFDdEcsaUJBQWlCO1FBQ2pCLElBQUksQ0FBQyxDQUFDLFdBQVcsS0FBSyxVQUFVLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRTtZQUNsRCxJQUFJLENBQUMsQ0FBQyxXQUFXLEtBQUssVUFBVSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUU7Z0JBQ2xELDBCQUEwQjtnQkFDMUIsT0FBTyxDQUFDLENBQUMsQ0FBQzthQUNiO1NBQ0o7YUFDSSxJQUFJLENBQUMsQ0FBQyxXQUFXLEtBQUssVUFBVSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUU7WUFDdkQsMkJBQTJCO1lBQzNCLE9BQU8sQ0FBQyxDQUFDO1NBQ1o7UUFDRCx1QkFBdUI7UUFDdkIsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVNLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxDQUF1QixFQUFFLENBQXVCO1FBQzlFLElBQUksQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLENBQUMsSUFBSTtZQUFFLE9BQU8sS0FBSyxDQUFDO1FBQ3BDLFlBQVk7UUFDWixJQUFJLENBQUMsQ0FBQyxlQUFlLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxlQUFlLENBQUMsTUFBTSxFQUFFO1lBQ3ZELE9BQU8sS0FBSyxDQUFDO1NBQ2hCO1FBQ0QsNEJBQTRCO1FBQzVCLElBQUksQ0FBQyxDQUFDLGVBQWUsQ0FBQyxNQUFNLEtBQUssQ0FBQztZQUM5QixPQUFPLElBQUksQ0FBQztRQUVoQixrQ0FBa0M7UUFDbEMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLENBQUMsQ0FBQyxlQUFlLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDMUQsTUFBTSxZQUFZLEdBQUcsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDL0MsTUFBTSxZQUFZLEdBQUcsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDL0MsSUFBSSxZQUFZLEtBQUssWUFBWTtnQkFBRSxPQUFPLEtBQUssQ0FBQztTQUNuRDtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Q0FDSiJ9