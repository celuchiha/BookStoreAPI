import * as Interfaces from "./interfaces";
export declare class ProfileExtender {
    static applyProfiles(profiles: Interfaces.Profile[]): void;
    private static applyProfile;
    /**
     * Extends all Package class types with getters for checking if the profile is applied to the Package.
     */
    private static addHasProfileGetters;
    /**
     * Extends all extendable class types with getters for checking if a stereotype is applied.
     */
    private static addHasStereotypeGetters;
    private static addSubElementAccessors;
    /**
     * Adds accessor functions for stereotypes to the package (and model) level, e.g. getMyStereotypeClasses(),
     * getMyStereotypeInterfaces(), etc
     */
    private static addPackageStereotypeAccessors;
    /**
     * Extends all classifier types with accessors to profile-specific stereotypes for Operations, Properties etc.
     */
    private static addClassifierAccessors;
    private static addSubSelementAccessorsForElementTypes;
    private static getAccessorFunctionForSubElementType;
    private static extendTypesWithFunction;
    private static extendTypesWithGetter;
    /**
     * Gets the actual Javascript implementation types that match the specified element type.
     */
    private static getClassTypesByElementType;
    private static getGetPluralElementTypeName;
}
