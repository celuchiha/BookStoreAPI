import { ModelTransform } from '@yellicode/core';
import * as elements from "../interfaces";
/**
 * Transforms a Model or Package by returning just the Package that matches a specified expression.
 */
export declare class PackageFilterTransform<TSource extends elements.Package = elements.Model> implements ModelTransform<TSource, elements.Package> {
    private packageName;
    private includeNestedPackages;
    /**
     * Constructor. Creates a new PackageFilterTransform that only includes the package with the specified name.
     * @param expression The name of the package. If the name ends with a forward-slash ('/'), nested
     * packages will be included. The expression is case-insensitive.
     */
    constructor(expression: string);
    /**
     * Transforms the source Model or Package and returns the first Package that matches the expression.
     * The result will be empty if the package could not be found.
     * @param source The Model or Package to transform.
     */
    transform(source: elements.Model | elements.Package): elements.Package;
    private static findPackageRecursive;
}
