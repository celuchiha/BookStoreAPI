import { ModelTransform } from '@yellicode/core';
import * as elements from "../interfaces";
/**
 * A base class for transforms that need to be applied recursively to all nested packaged elements
 * in a model or package.
 */
export declare abstract class PackagedElementTransform<TSource extends elements.Package = elements.Model> implements ModelTransform<TSource, elements.Package> {
    /**
     * Transforms the package and returns the transformation result.
     * @param pack The package or model to transform.
     */
    transform(pack: TSource): elements.Package;
    /**
     * When implemented, applies the transformation to the packageable element,
     * @param element
     */
    protected abstract transformElement(element: elements.PackageableElement): void;
    private transformPackageRecursive;
}
