/**
 * This file contains a simple HtmlWriter that makes generating HTML code easier.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { CodeWriter } from '@yellicode/core';
/**
 * https://html.spec.whatwg.org/multipage/syntax.html#void-elements
 */
var voidHtmlElements = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];
/**
 * A very basic CodeWriter for writing HTML.
 */
var HtmlWriter = /** @class */ (function (_super) {
    __extends(HtmlWriter, _super);
    function HtmlWriter(textWriter) {
        return _super.call(this, textWriter) || this;
    }
    HtmlWriter.prototype.writeOpeningTag = function (tagName, options) {
        this.writeIndent();
        this.write("<" + tagName);
        if (options.classNames) {
            this.write(" class=\"" + options.classNames + "\"");
        }
        if (options.attributes) {
            for (var key in options.attributes) {
                if (options.attributes.hasOwnProperty(key)) {
                    var value = options.attributes[key];
                    if (typeof value == "boolean") {
                        if (value)
                            this.write(" " + key);
                    }
                    else
                        this.write(" " + key + "=\"" + options.attributes[key] + "\"");
                }
            }
        }
        this.write('>');
        return this;
    };
    HtmlWriter.prototype.writeElementFromCallback = function (tagName, options, innerHtml) {
        this.writeOpeningTag(tagName, options);
        this.writeEndOfLine();
        this.increaseIndent();
        if (innerHtml)
            innerHtml(this);
        this.decreaseIndent();
        this.writeLine("</" + tagName + ">");
    };
    ;
    HtmlWriter.prototype.writeElementFromString = function (tagName, options, innerHtml) {
        this.writeOpeningTag(tagName, options);
        if (innerHtml) {
            this.write(innerHtml);
        }
        if (innerHtml || voidHtmlElements.indexOf(tagName) === -1) {
            this.writeEndOfLine("</" + tagName + ">");
        }
        else
            this.writeEndOfLine(); // this is a void element
    };
    HtmlWriter.prototype.writeElement = function (tagName, options, contents) {
        if (!options)
            options = {};
        if (!contents || typeof contents == "string") {
            this.writeElementFromString(tagName, options, contents);
        }
        else {
            this.writeElementFromCallback(tagName, options, contents);
        }
        return this;
    };
    return HtmlWriter;
}(CodeWriter));
export { HtmlWriter };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHRtbC13cml0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaHRtbC13cml0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7Ozs7Ozs7Ozs7Ozs7O0FBRUgsT0FBTyxFQUFjLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBR3pEOztHQUVHO0FBQ0gsSUFBTSxnQkFBZ0IsR0FBRyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBRS9KOztHQUVHO0FBQ0g7SUFBZ0MsOEJBQVU7SUFDdEMsb0JBQVksVUFBc0I7ZUFDOUIsa0JBQU0sVUFBVSxDQUFDO0lBQ3JCLENBQUM7SUFFTyxvQ0FBZSxHQUF2QixVQUF3QixPQUFlLEVBQUUsT0FBZ0M7UUFDckUsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ25CLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBSSxPQUFTLENBQUMsQ0FBQztRQUMxQixJQUFJLE9BQU8sQ0FBQyxVQUFVLEVBQUU7WUFDcEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFXLE9BQU8sQ0FBQyxVQUFVLE9BQUcsQ0FBQyxDQUFDO1NBQ2hEO1FBQ0QsSUFBSSxPQUFPLENBQUMsVUFBVSxFQUFFO1lBQ3BCLEtBQUssSUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLFVBQVUsRUFBRTtnQkFDbEMsSUFBSSxPQUFPLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsRUFBRTtvQkFDeEMsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztvQkFDdEMsSUFBSSxPQUFPLEtBQUssSUFBSSxTQUFTLEVBQUU7d0JBQzNCLElBQUksS0FBSzs0QkFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQUksR0FBSyxDQUFDLENBQUM7cUJBQ3BDOzt3QkFDSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQUksR0FBRyxXQUFLLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLE9BQUcsQ0FBQyxDQUFDO2lCQUMzRDthQUNKO1NBQ0o7UUFDRCxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hCLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFTyw2Q0FBd0IsR0FBaEMsVUFBaUMsT0FBZSxFQUFFLE9BQWdDLEVBQUUsU0FBdUM7UUFDdkgsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN0QixJQUFJLFNBQVM7WUFBRSxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDL0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBSyxPQUFPLE1BQUcsQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFBQSxDQUFDO0lBRU0sMkNBQXNCLEdBQTlCLFVBQStCLE9BQWUsRUFBRSxPQUFnQyxFQUFFLFNBQWtCO1FBQ2hHLElBQUksQ0FBQyxlQUFlLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3ZDLElBQUksU0FBUyxFQUFFO1lBQ1gsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUN6QjtRQUNELElBQUksU0FBUyxJQUFJLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtZQUN2RCxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQUssT0FBTyxNQUFHLENBQUMsQ0FBQztTQUN4Qzs7WUFDSSxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQyx5QkFBeUI7SUFDekQsQ0FBQztJQWdCTSxpQ0FBWSxHQUFuQixVQUFvQixPQUFlLEVBQUUsT0FBdUMsRUFBRSxRQUFzQjtRQUNoRyxJQUFJLENBQUMsT0FBTztZQUFFLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsSUFBSSxPQUFPLFFBQVEsSUFBSSxRQUFRLEVBQUU7WUFDMUMsSUFBSSxDQUFDLHNCQUFzQixDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDM0Q7YUFDSTtZQUNELElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQzdEO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUNMLGlCQUFDO0FBQUQsQ0FBQyxBQXRFRCxDQUFnQyxVQUFVLEdBc0V6QyJ9