/*
 * Copyright (c) 2019 Yellicode
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
import * as elements from "@yellicode/elements";
/**
 * Transforms a Model or Package by returning just the Package that matches a specified expression.
 * @deprecated PackageFilterTransform has moved to the 'yellicode/elements' package, please update your references.
 */
var PackageFilterTransform = /** @class */ (function () {
    /**
     * Constructor. Creates a new PackageFilterTransform that only includes the package with the specified name.
     * @param expression The name of the package. If the name ends with a forward-slash ('/'), nested
     * packages will be included. The expression is case-insensitive.
     */
    function PackageFilterTransform(expression) {
        console.warn("PackageFilterTransform has moved to the 'yellicode/elements' package, please update your references.");
        if (!expression) {
            throw "Unable to filter packages. The filter expression cannot be empty.";
        }
        var normalizedExpression = expression.toLowerCase();
        if (normalizedExpression.endsWith('/')) {
            this.includeNestedPackages = true;
            this.packageName = normalizedExpression.substring(0, normalizedExpression.length - 1);
        }
        else {
            this.packageName = normalizedExpression;
            this.includeNestedPackages = false;
        }
    }
    /**
     * Transforms the source Model or Package and returns the first Package that matches the expression.
     * The result will be empty if the package could not be found.
     * @param source The Model or Package to transform.
     */
    PackageFilterTransform.prototype.transform = function (source) {
        var _this = this;
        if (!source || !source.packagedElements)
            return source;
        var pack = PackageFilterTransform.findPackageRecursive(source, function (pack) {
            return (pack.name != null) && (pack.name.toLowerCase() === _this.packageName);
        });
        if (!pack)
            throw "Unable to filter packages. Could not find any nested package with name '" + this.packageName + "'.";
        // Remove any nested packages if needed
        if (!this.includeNestedPackages && pack.packagedElements != null) {
            pack.packagedElements = pack.packagedElements.filter(function (e) { return !(elements.ElementTypeUtility.isPackage(e.elementType)); });
        }
        return pack;
    };
    PackageFilterTransform.findPackageRecursive = function (root, predicate) {
        if (predicate(root))
            return root;
        if (root.packagedElements == null)
            return null;
        // We use a for loop so that we can easily return when we 
        for (var i = 0, len = root.packagedElements.length; i < len; i++) {
            var packagedElement = root.packagedElements[i];
            if (packagedElement.elementType === elements.ElementType.package) {
                var childResult = PackageFilterTransform.findPackageRecursive(packagedElement, predicate);
                if (childResult != null)
                    return childResult;
            }
        }
        return null;
    };
    return PackageFilterTransform;
}());
export { PackageFilterTransform };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFja2FnZS1maWx0ZXItdHJhbnNmb3JtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3RyYW5zZm9ybXMvcGFja2FnZS1maWx0ZXItdHJhbnNmb3JtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILE9BQU8sS0FBSyxRQUFRLE1BQU0scUJBQXFCLENBQUM7QUFHaEQ7OztHQUdHO0FBQ0g7SUFJSTs7OztPQUlHO0lBQ0gsZ0NBQVksVUFBa0I7UUFDMUIsT0FBTyxDQUFDLElBQUksQ0FBQyxzR0FBc0csQ0FBQyxDQUFDO1FBQ3JILElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDYixNQUFNLG1FQUFtRSxDQUFDO1NBQzdFO1FBQ0QsSUFBTSxvQkFBb0IsR0FBRyxVQUFVLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDdEQsSUFBSSxvQkFBb0IsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDcEMsSUFBSSxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQztZQUNsQyxJQUFJLENBQUMsV0FBVyxHQUFHLG9CQUFvQixDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsb0JBQW9CLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQ3pGO2FBQU07WUFDSCxJQUFJLENBQUMsV0FBVyxHQUFHLG9CQUFvQixDQUFDO1lBQ3hDLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxLQUFLLENBQUM7U0FDdEM7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLDBDQUFTLEdBQWhCLFVBQWlCLE1BQXlDO1FBQTFELGlCQWdCQztRQWZHLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsZ0JBQWdCO1lBQ25DLE9BQU8sTUFBTSxDQUFDO1FBRWxCLElBQU0sSUFBSSxHQUFHLHNCQUFzQixDQUFDLG9CQUFvQixDQUFDLE1BQU0sRUFBRSxVQUFDLElBQXNCO1lBQ3BGLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsS0FBSyxLQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDakYsQ0FBQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsSUFBSTtZQUNMLE1BQU0sNkVBQTJFLElBQUksQ0FBQyxXQUFXLE9BQUksQ0FBQztRQUUxRyx1Q0FBdUM7UUFDdkMsSUFBSSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLElBQUksSUFBSSxFQUFFO1lBQzlELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQXZELENBQXVELENBQUMsQ0FBQztTQUN0SDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFYywyQ0FBb0IsR0FBbkMsVUFBb0MsSUFBc0IsRUFBRSxTQUE4QztRQUN0RyxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUM7WUFBRSxPQUFPLElBQUksQ0FBQztRQUNqQyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxJQUFJO1lBQUUsT0FBTyxJQUFJLENBQUM7UUFDL0MsMERBQTBEO1FBQzFELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUQsSUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2pELElBQUksZUFBZSxDQUFDLFdBQVcsS0FBSyxRQUFRLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRTtnQkFDOUQsSUFBTSxXQUFXLEdBQUcsc0JBQXNCLENBQUMsb0JBQW9CLENBQUMsZUFBbUMsRUFBRSxTQUFTLENBQUMsQ0FBQztnQkFDaEgsSUFBSSxXQUFXLElBQUksSUFBSTtvQkFBRSxPQUFPLFdBQVcsQ0FBQzthQUMvQztTQUNKO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUNMLDZCQUFDO0FBQUQsQ0FBQyxBQTVERCxJQTREQyJ9