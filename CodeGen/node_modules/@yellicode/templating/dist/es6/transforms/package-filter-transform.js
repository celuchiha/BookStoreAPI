/*
 * Copyright (c) 2019 Yellicode
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
import * as elements from "@yellicode/elements";
/**
 * Transforms a Model or Package by returning just the Package that matches a specified expression.
 * @deprecated PackageFilterTransform has moved to the 'yellicode/elements' package, please update your references.
 */
export class PackageFilterTransform {
    /**
     * Constructor. Creates a new PackageFilterTransform that only includes the package with the specified name.
     * @param expression The name of the package. If the name ends with a forward-slash ('/'), nested
     * packages will be included. The expression is case-insensitive.
     */
    constructor(expression) {
        console.warn(`PackageFilterTransform has moved to the 'yellicode/elements' package, please update your references.`);
        if (!expression) {
            throw `Unable to filter packages. The filter expression cannot be empty.`;
        }
        const normalizedExpression = expression.toLowerCase();
        if (normalizedExpression.endsWith('/')) {
            this.includeNestedPackages = true;
            this.packageName = normalizedExpression.substring(0, normalizedExpression.length - 1);
        }
        else {
            this.packageName = normalizedExpression;
            this.includeNestedPackages = false;
        }
    }
    /**
     * Transforms the source Model or Package and returns the first Package that matches the expression.
     * The result will be empty if the package could not be found.
     * @param source The Model or Package to transform.
     */
    transform(source) {
        if (!source || !source.packagedElements)
            return source;
        const pack = PackageFilterTransform.findPackageRecursive(source, (pack) => {
            return (pack.name != null) && (pack.name.toLowerCase() === this.packageName);
        });
        if (!pack)
            throw `Unable to filter packages. Could not find any nested package with name '${this.packageName}'.`;
        // Remove any nested packages if needed
        if (!this.includeNestedPackages && pack.packagedElements != null) {
            pack.packagedElements = pack.packagedElements.filter(e => !(elements.ElementTypeUtility.isPackage(e.elementType)));
        }
        return pack;
    }
    static findPackageRecursive(root, predicate) {
        if (predicate(root))
            return root;
        if (root.packagedElements == null)
            return null;
        // We use a for loop so that we can easily return when we 
        for (var i = 0, len = root.packagedElements.length; i < len; i++) {
            const packagedElement = root.packagedElements[i];
            if (packagedElement.elementType === elements.ElementType.package) {
                const childResult = PackageFilterTransform.findPackageRecursive(packagedElement, predicate);
                if (childResult != null)
                    return childResult;
            }
        }
        return null;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFja2FnZS1maWx0ZXItdHJhbnNmb3JtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3RyYW5zZm9ybXMvcGFja2FnZS1maWx0ZXItdHJhbnNmb3JtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILE9BQU8sS0FBSyxRQUFRLE1BQU0scUJBQXFCLENBQUM7QUFHaEQ7OztHQUdHO0FBQ0gsTUFBTTtJQUlGOzs7O09BSUc7SUFDSCxZQUFZLFVBQWtCO1FBQzFCLE9BQU8sQ0FBQyxJQUFJLENBQUMsc0dBQXNHLENBQUMsQ0FBQztRQUNySCxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2IsTUFBTSxtRUFBbUUsQ0FBQztTQUM3RTtRQUNELE1BQU0sb0JBQW9CLEdBQUcsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3RELElBQUksb0JBQW9CLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3BDLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLENBQUM7WUFDbEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxvQkFBb0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLG9CQUFvQixDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztTQUN6RjthQUFNO1lBQ0gsSUFBSSxDQUFDLFdBQVcsR0FBRyxvQkFBb0IsQ0FBQztZQUN4QyxJQUFJLENBQUMscUJBQXFCLEdBQUcsS0FBSyxDQUFDO1NBQ3RDO0lBQ0wsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxTQUFTLENBQUMsTUFBeUM7UUFDdEQsSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0I7WUFDbkMsT0FBTyxNQUFNLENBQUM7UUFFbEIsTUFBTSxJQUFJLEdBQUcsc0JBQXNCLENBQUMsb0JBQW9CLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBc0IsRUFBRSxFQUFFO1lBQ3hGLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsS0FBSyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDakYsQ0FBQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsSUFBSTtZQUNMLE1BQU0sMkVBQTJFLElBQUksQ0FBQyxXQUFXLElBQUksQ0FBQztRQUUxRyx1Q0FBdUM7UUFDdkMsSUFBSSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLElBQUksSUFBSSxFQUFFO1lBQzlELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUN0SDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFTyxNQUFNLENBQUMsb0JBQW9CLENBQUMsSUFBc0IsRUFBRSxTQUE4QztRQUN0RyxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUM7WUFBRSxPQUFPLElBQUksQ0FBQztRQUNqQyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxJQUFJO1lBQUUsT0FBTyxJQUFJLENBQUM7UUFDL0MsMERBQTBEO1FBQzFELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUQsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2pELElBQUksZUFBZSxDQUFDLFdBQVcsS0FBSyxRQUFRLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRTtnQkFDOUQsTUFBTSxXQUFXLEdBQUcsc0JBQXNCLENBQUMsb0JBQW9CLENBQUMsZUFBbUMsRUFBRSxTQUFTLENBQUMsQ0FBQztnQkFDaEgsSUFBSSxXQUFXLElBQUksSUFBSTtvQkFBRSxPQUFPLFdBQVcsQ0FBQzthQUMvQztTQUNKO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztDQUNKIn0=