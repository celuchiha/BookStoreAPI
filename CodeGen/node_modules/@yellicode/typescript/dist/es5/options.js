/**
 * Defines options for dealing with elements that are 'optional', meaning that they have a lower bound of 0.
 */
export var OptionalityModifier;
(function (OptionalityModifier) {
    /**
     * Don't write any modifier.
     */
    OptionalityModifier[OptionalityModifier["Ignore"] = 0] = "Ignore";
    /**
     * Write a 'null' keyword, for example 'myProperty: string | null;';
     */
    OptionalityModifier[OptionalityModifier["NullKeyword"] = 1] = "NullKeyword";
    /**
     * Write a question token, for example 'myProperty?: string;';
     */
    OptionalityModifier[OptionalityModifier["QuestionToken"] = 2] = "QuestionToken";
})(OptionalityModifier || (OptionalityModifier = {}));
export var EnumFeatures;
(function (EnumFeatures) {
    EnumFeatures[EnumFeatures["None"] = 0] = "None";
    EnumFeatures[EnumFeatures["JsDocDescription"] = 1] = "JsDocDescription";
    EnumFeatures[EnumFeatures["Initializers"] = 2] = "Initializers";
    EnumFeatures[EnumFeatures["All"] = 3] = "All";
})(EnumFeatures || (EnumFeatures = {}));
export var ClassFeatures;
(function (ClassFeatures) {
    ClassFeatures[ClassFeatures["None"] = 0] = "None";
    ClassFeatures[ClassFeatures["JsDocDescription"] = 1] = "JsDocDescription";
    ClassFeatures[ClassFeatures["Generalizations"] = 2] = "Generalizations";
    ClassFeatures[ClassFeatures["InterfaceRealizations"] = 4] = "InterfaceRealizations";
    ClassFeatures[ClassFeatures["All"] = 7] = "All";
})(ClassFeatures || (ClassFeatures = {}));
export var InterfaceFeatures;
(function (InterfaceFeatures) {
    InterfaceFeatures[InterfaceFeatures["None"] = 0] = "None";
    InterfaceFeatures[InterfaceFeatures["JsDocDescription"] = 1] = "JsDocDescription";
    InterfaceFeatures[InterfaceFeatures["Generalizations"] = 2] = "Generalizations";
    InterfaceFeatures[InterfaceFeatures["All"] = 3] = "All";
})(InterfaceFeatures || (InterfaceFeatures = {}));
export var PropertyFeatures;
(function (PropertyFeatures) {
    PropertyFeatures[PropertyFeatures["None"] = 0] = "None";
    PropertyFeatures[PropertyFeatures["JsDocDescription"] = 1] = "JsDocDescription";
    PropertyFeatures[PropertyFeatures["AccessModifier"] = 2] = "AccessModifier";
    PropertyFeatures[PropertyFeatures["ReadonlyModifier"] = 4] = "ReadonlyModifier";
    PropertyFeatures[PropertyFeatures["OptionalModifier"] = 8] = "OptionalModifier";
    PropertyFeatures[PropertyFeatures["Initializer"] = 16] = "Initializer";
    /**
     * Writes the so-called 'definite assignment assertion modifier' for the property if the property is required.
     * There are certain scenarios where properties can be initialized indirectly (perhaps by a helper method or dependency injection library),
     * in which case you can use the definite assignment assertion modifiers for your properties.
     */
    PropertyFeatures[PropertyFeatures["DefiniteAssignmentAssertionModifier"] = 32] = "DefiniteAssignmentAssertionModifier";
    PropertyFeatures[PropertyFeatures["All"] = 63] = "All";
    /**
     * Include all features, except the ones that are not usable on interface properties.
     */
    PropertyFeatures[PropertyFeatures["AllInterfaceProperty"] = 13] = "AllInterfaceProperty";
})(PropertyFeatures || (PropertyFeatures = {}));
export var FunctionFeatures;
(function (FunctionFeatures) {
    FunctionFeatures[FunctionFeatures["None"] = 0] = "None";
    FunctionFeatures[FunctionFeatures["JsDocDescription"] = 1] = "JsDocDescription";
    FunctionFeatures[FunctionFeatures["AccessModifier"] = 2] = "AccessModifier";
    FunctionFeatures[FunctionFeatures["OptionalModifier"] = 4] = "OptionalModifier";
    FunctionFeatures[FunctionFeatures["All"] = 7] = "All";
})(FunctionFeatures || (FunctionFeatures = {}));
export var ParameterFeatures;
(function (ParameterFeatures) {
    ParameterFeatures[ParameterFeatures["None"] = 0] = "None";
    ParameterFeatures[ParameterFeatures["JsDocDescription"] = 1] = "JsDocDescription";
    ParameterFeatures[ParameterFeatures["OptionalModifier"] = 2] = "OptionalModifier";
    ParameterFeatures[ParameterFeatures["All"] = 3] = "All";
})(ParameterFeatures || (ParameterFeatures = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9vcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBOztHQUVHO0FBQ0gsTUFBTSxDQUFOLElBQVksbUJBYVg7QUFiRCxXQUFZLG1CQUFtQjtJQUMzQjs7T0FFRztJQUNILGlFQUFVLENBQUE7SUFDVjs7T0FFRztJQUNILDJFQUFvQixDQUFBO0lBQ3BCOztPQUVHO0lBQ0gsK0VBQXNCLENBQUE7QUFDMUIsQ0FBQyxFQWJXLG1CQUFtQixLQUFuQixtQkFBbUIsUUFhOUI7QUFlRCxNQUFNLENBQU4sSUFBWSxZQUtYO0FBTEQsV0FBWSxZQUFZO0lBQ3BCLCtDQUFRLENBQUE7SUFDUix1RUFBeUIsQ0FBQTtJQUN6QiwrREFBcUIsQ0FBQTtJQUNyQiw2Q0FBcUMsQ0FBQTtBQUN6QyxDQUFDLEVBTFcsWUFBWSxLQUFaLFlBQVksUUFLdkI7QUFrQ0QsTUFBTSxDQUFOLElBQVksYUFNWDtBQU5ELFdBQVksYUFBYTtJQUNyQixpREFBUSxDQUFBO0lBQ1IseUVBQXlCLENBQUE7SUFDekIsdUVBQXdCLENBQUE7SUFDeEIsbUZBQThCLENBQUE7SUFDOUIsK0NBQWdFLENBQUE7QUFDcEUsQ0FBQyxFQU5XLGFBQWEsS0FBYixhQUFhLFFBTXhCO0FBaUNELE1BQU0sQ0FBTixJQUFZLGlCQUtYO0FBTEQsV0FBWSxpQkFBaUI7SUFDekIseURBQVEsQ0FBQTtJQUNSLGlGQUF5QixDQUFBO0lBQ3pCLCtFQUF3QixDQUFBO0lBQ3hCLHVEQUF3QyxDQUFBO0FBQzVDLENBQUMsRUFMVyxpQkFBaUIsS0FBakIsaUJBQWlCLFFBSzVCO0FBNkJELE1BQU0sQ0FBTixJQUFZLGdCQWtCWDtBQWxCRCxXQUFZLGdCQUFnQjtJQUN4Qix1REFBUSxDQUFBO0lBQ1IsK0VBQXlCLENBQUE7SUFDekIsMkVBQXVCLENBQUE7SUFDdkIsK0VBQXlCLENBQUE7SUFDekIsK0VBQXlCLENBQUE7SUFDekIsc0VBQW9CLENBQUE7SUFDcEI7Ozs7T0FJRztJQUNILHNIQUE0QyxDQUFBO0lBQzVDLHNEQUFpSSxDQUFBO0lBQ2pJOztPQUVHO0lBQ0gsd0ZBQXNLLENBQUE7QUFDMUssQ0FBQyxFQWxCVyxnQkFBZ0IsS0FBaEIsZ0JBQWdCLFFBa0IzQjtBQXdCRCxNQUFNLENBQU4sSUFBWSxnQkFNWDtBQU5ELFdBQVksZ0JBQWdCO0lBQ3hCLHVEQUFRLENBQUE7SUFDUiwrRUFBeUIsQ0FBQTtJQUN6QiwyRUFBdUIsQ0FBQTtJQUN2QiwrRUFBeUIsQ0FBQTtJQUN6QixxREFBMEQsQ0FBQTtBQUM5RCxDQUFDLEVBTlcsZ0JBQWdCLEtBQWhCLGdCQUFnQixRQU0zQjtBQUVELE1BQU0sQ0FBTixJQUFZLGlCQUtYO0FBTEQsV0FBWSxpQkFBaUI7SUFDekIseURBQVEsQ0FBQTtJQUNSLGlGQUF5QixDQUFBO0lBQ3pCLGlGQUF5QixDQUFBO0lBQ3pCLHVEQUF5QyxDQUFBO0FBQzdDLENBQUMsRUFMVyxpQkFBaUIsS0FBakIsaUJBQWlCLFFBSzVCIn0=