/*
 * Copyright (c) 2019 Yellicode
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
import { v4 as uuid } from 'uuid'; // 'uuid' is awesome: https://www.npmjs.com/package/uuid
import * as os from 'os';
var HEX_LIST = '0123456789abcdef';
var B64_LIST = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
var STRING_LENGTH = 22; // Actually 24 characters for a base64 encoded Guid, but the padding "==" is removed.
var UniqueId = /** @class */ (function () {
    function UniqueId() {
    }
    UniqueId.create = function () {
        var guid = uuid();
        var encoded = UniqueId.guidToBase64(guid, UniqueId.isLittleEndian);
        // Modify for use in a URL https://en.wikipedia.org/wiki/Base64#URL_applications
        encoded = encoded.replace("/", "_").replace("+", "-");
        return encoded.substring(0, STRING_LENGTH); // remove the padding "=="
    };
    UniqueId.guidToBase64 = function (g, le) {
        // Credits: https://stackoverflow.com/a/9998010/9370196
        var s = g.replace(/[^0-9a-f]/ig, '').toLowerCase();
        if (s.length != 32)
            return '';
        if (le)
            s = s.slice(6, 8) + s.slice(4, 6) + s.slice(2, 4) + s.slice(0, 2) +
                s.slice(10, 12) + s.slice(8, 10) +
                s.slice(14, 16) + s.slice(12, 14) +
                s.slice(16);
        s += '0';
        var a, p, q;
        var r = '';
        var i = 0;
        while (i < 33) {
            a = (HEX_LIST.indexOf(s.charAt(i++)) << 8) |
                (HEX_LIST.indexOf(s.charAt(i++)) << 4) |
                (HEX_LIST.indexOf(s.charAt(i++)));
            p = a >> 6;
            q = a & 63;
            r += B64_LIST.charAt(p) + B64_LIST.charAt(q);
        }
        r += '==';
        return r;
    };
    UniqueId.isLittleEndian = os.endianness() === 'LE';
    return UniqueId;
}());
export { UniqueId };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pcXVlLWlkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3VuaXF1ZS1pZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxPQUFPLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxNQUFNLE1BQU0sQ0FBQyxDQUFDLHdEQUF3RDtBQUMzRixPQUFPLEtBQUssRUFBRSxNQUFNLElBQUksQ0FBQztBQUV6QixJQUFNLFFBQVEsR0FBRyxrQkFBa0IsQ0FBQztBQUNwQyxJQUFNLFFBQVEsR0FBRyxrRUFBa0UsQ0FBQztBQUNwRixJQUFNLGFBQWEsR0FBRyxFQUFFLENBQUMsQ0FBQyxxRkFBcUY7QUFFL0c7SUFBQTtJQXVDQSxDQUFDO0lBcENpQixlQUFNLEdBQXBCO1FBQ0ksSUFBTSxJQUFJLEdBQUcsSUFBSSxFQUFFLENBQUM7UUFDcEIsSUFBSSxPQUFPLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ25FLGdGQUFnRjtRQUN0RixPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNoRCxPQUFPLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUMsMEJBQTBCO0lBQzFFLENBQUM7SUFFYyxxQkFBWSxHQUEzQixVQUE0QixDQUFTLEVBQUUsRUFBVztRQUM5Qyx1REFBdUQ7UUFDdkQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsRUFBRSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkQsSUFBSSxDQUFDLENBQUMsTUFBTSxJQUFJLEVBQUU7WUFBRSxPQUFPLEVBQUUsQ0FBQztRQUU5QixJQUFJLEVBQUU7WUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO2dCQUNyRSxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7Z0JBQ2hDLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQztnQkFDakMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNoQixDQUFDLElBQUksR0FBRyxDQUFDO1FBRVQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNaLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNYLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNWLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUNYLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN0QyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN0QyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUV0QyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNYLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBRVgsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNoRDtRQUNELENBQUMsSUFBSSxJQUFJLENBQUM7UUFFVixPQUFPLENBQUMsQ0FBQztJQUNiLENBQUM7SUFyQ00sdUJBQWMsR0FBRyxFQUFFLENBQUMsVUFBVSxFQUFFLEtBQUssSUFBSSxDQUFDO0lBc0NyRCxlQUFDO0NBQUEsQUF2Q0QsSUF1Q0M7U0F2Q1ksUUFBUSJ9