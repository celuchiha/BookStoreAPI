import { ChangeDetectionStrategy, ViewEncapsulation } from './angular-directive';
// https://angular.io/api/core/Component
var AngularCodeWriter = /** @class */ (function () {
    function AngularCodeWriter() {
    }
    AngularCodeWriter.writeComponentDecorator = function (writer, component) {
        writer.writeLine('@Component({');
        writer.increaseIndent();
        AngularCodeWriter.writeComponentConfig(writer, component);
        writer.decreaseIndent();
        writer.writeLine('})');
    };
    AngularCodeWriter.writeComponentConfig = function (writer, component) {
        var keys = Object.keys(component);
        keys.forEach(function (key, index) {
            writer.writeIndent();
            var value = component[key];
            writer.write(key + ": " + AngularCodeWriter.stringifyComponentProperty(key, value));
            if (index < keys.length - 1)
                writer.write(',');
            writer.writeEndOfLine();
        });
    };
    AngularCodeWriter.writeModuleConfig = function (writer, module) {
        var keys = Object.keys(module);
        keys.forEach(function (key, index) {
            writer.writeIndent();
            var value = module[key];
            writer.write(key + ": " + AngularCodeWriter.stringifyModuleProperty(key, value));
            if (index < keys.length - 1)
                writer.write(',');
            writer.writeEndOfLine();
        });
    };
    AngularCodeWriter.stringifyModuleProperty = function (key, value) {
        switch (key) {
            case 'bootstrap':
            case 'declarations':
            case 'entryComponents':
            case 'imports':
            case 'exports':
            case 'providers':
            case 'schemas':
                return AngularCodeWriter.stringifyObjectArray(value);
            default: break;
        }
        if (typeof (value) == typeof (true)) {
            return value ? 'true' : 'false';
        }
        return "'" + value + "'";
    };
    AngularCodeWriter.stringifyComponentProperty = function (key, value) {
        switch (key) {
            case 'changeDetection':
                return "ChangeDetectionStrategy." + ChangeDetectionStrategy[value];
            case 'encapsulation':
                return "ViewEncapsulation." + ViewEncapsulation[value];
            case 'entryComponents':
            case 'providers':
            case 'viewProviders':
                return AngularCodeWriter.stringifyObjectArray(value);
            case 'host':
                return AngularCodeWriter.stringifyKeyValuePair(value);
            default:
                break;
        }
        if (typeof (value) == typeof (true)) {
            return value ? 'true' : 'false';
        }
        if (value instanceof Array) {
            return AngularCodeWriter.stringifyStringArray(value);
        }
        else
            return "'" + value + "'";
    };
    AngularCodeWriter.stringifyObjectArray = function (arr) {
        if (!arr.length)
            return '[]';
        return "[" + arr.join(', ') + "]";
    };
    AngularCodeWriter.stringifyStringArray = function (arr) {
        if (!arr.length)
            return '[]';
        return "[" + arr.map(function (item) { return "'" + item + "'"; }).join(', ') + "]";
    };
    AngularCodeWriter.stringifyKeyValuePair = function (value) {
        // {'key1': 'value1', 'key2': 'value2'}
        var keys = Object.keys(value);
        return "{ " + keys.map(function (k) { return "'" + k + "': '" + value[k] + "'"; }).join(', ') + " }";
    };
    AngularCodeWriter.writeRoute = function (writer, route) {
        writer.writeLine('{');
        writer.increaseIndent();
        writer.writeLine("path: '" + route.path + "',");
        writer.writeLine("component: " + route.componentName);
        writer.decreaseIndent();
        writer.writeLine('},');
    };
    return AngularCodeWriter;
}());
export { AngularCodeWriter };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1jb2RlLXdyaXRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hbmd1bGFyLWNvZGUtd3JpdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBbUIsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUlsRyx3Q0FBd0M7QUFFeEM7SUFBQTtJQW1HQSxDQUFDO0lBakdlLHlDQUF1QixHQUFyQyxVQUFzQyxNQUFrQixFQUFFLFNBQTBCO1FBQ2xGLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDakMsTUFBTSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3hCLGlCQUFpQixDQUFDLG9CQUFvQixDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQztRQUMxRCxNQUFNLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDeEIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRWEsc0NBQW9CLEdBQWxDLFVBQW1DLE1BQWtCLEVBQUUsU0FBMEI7UUFDL0UsSUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNwQyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQUMsR0FBRyxFQUFFLEtBQUs7WUFDdEIsTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ3JCLElBQU0sS0FBSyxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUM3QixNQUFNLENBQUMsS0FBSyxDQUFJLEdBQUcsVUFBSyxpQkFBaUIsQ0FBQywwQkFBMEIsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFHLENBQUMsQ0FBQztZQUNwRixFQUFFLENBQUMsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7Z0JBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMvQyxNQUFNLENB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