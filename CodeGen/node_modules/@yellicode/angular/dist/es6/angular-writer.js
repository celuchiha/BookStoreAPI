import { ChangeDetectionStrategy, ViewEncapsulation } from './directive-config';
/**
 * Provides utility functions for generating Angular 2+ application code.
 */
export class AngularWriter {
    /**
    * Writes a full Angular '@Component' class decorator using the provided configuration.
    */
    static writeComponentDecorator(writer, config) {
        writer.writeDecoratorCodeBlock('Component', () => {
            AngularWriter.writeComponentConfig(writer, config);
        });
    }
    /**
     * Writes Angular component configuration that can be used inside a component class decorator.
     * Use writeComponentDecorator() to write a full '@Component' class decorator.
     */
    static writeComponentConfig(writer, config) {
        const keys = Object.keys(config);
        keys.forEach((key, index) => {
            writer.writeIndent();
            const value = config[key];
            writer.write(`${key}: ${AngularWriter.stringifyComponentProperty(key, value)}`);
            if (index < keys.length - 1)
                writer.write(',');
            writer.writeEndOfLine();
        });
    }
    /**
    * Writes a full Angular '@NgModule' class decorator using the provided configuration.
    */
    static writeModuleDecorator(writer, config) {
        writer.writeDecoratorCodeBlock('NgModule', () => {
            AngularWriter.writeComponentConfig(writer, config);
        });
    }
    /**
     * Writes Angular module configuration that can be used inside a module class decorator.
     * Use writeModuleDecorator() to write a full '@NgModule' class decorator.
     */
    static writeModuleConfig(writer, config) {
        const keys = Object.keys(config);
        keys.forEach((key, index) => {
            writer.writeIndent();
            const value = config[key];
            writer.write(`${key}: ${AngularWriter.stringifyModuleProperty(key, value)}`);
            if (index < keys.length - 1)
                writer.write(',');
            writer.writeEndOfLine();
        });
    }
    /**
    * Writes a route configuration for the specified component, with the specified route path.
    */
    static writeRoute(writer, route) {
        writer.writeLine('{');
        writer.increaseIndent();
        writer.writeLine(`path: '${route.path}',`);
        writer.writeLine(`component: ${route.componentName}`);
        writer.decreaseIndent();
        writer.writeLine('},');
    }
    static stringifyModuleProperty(key, value) {
        switch (key) {
            case 'bootstrap':
            case 'declarations':
            case 'entryComponents':
            case 'imports':
            case 'exports':
            case 'providers':
            case 'schemas':
                return AngularWriter.stringifyObjectArray(value);
            default: break;
        }
        if (typeof (value) == typeof (true)) {
            return value ? 'true' : 'false';
        }
        return `'${value}'`;
    }
    static stringifyComponentProperty(key, value) {
        switch (key) {
            case 'changeDetection':
                return `ChangeDetectionStrategy.${ChangeDetectionStrategy[value]}`;
            case 'encapsulation':
                return `ViewEncapsulation.${ViewEncapsulation[value]}`;
            case 'entryComponents':
            case 'providers':
            case 'viewProviders':
                return AngularWriter.stringifyObjectArray(value);
            case 'host':
                return AngularWriter.stringifyKeyValuePair(value);
            default:
                break;
        }
        if (typeof (value) == typeof (true)) {
            return value ? 'true' : 'false';
        }
        if (value instanceof Array) {
            return AngularWriter.stringifyStringArray(value);
        }
        // The value is a string
        else
            return `'${value}'`;
    }
    static stringifyObjectArray(arr) {
        if (!arr.length)
            return '[]';
        return `[${arr.join(', ')}]`;
    }
    static stringifyStringArray(arr) {
        if (!arr.length)
            return '[]';
        return `[${arr.map(item => `'${item}'`).join(', ')}]`;
    }
    static stringifyKeyValuePair(value) {
        // {'key1': 'value1', 'key2': 'value2'}
        const keys = Object.keys(value);
        return `{ ${keys.map(k => `'${k}': '${value[k]}'`).join(', ')} }`;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci13cml0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYW5ndWxhci13cml0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFtQix1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBTWpHOztHQUVHO0FBQ0gsTUFBTSxPQUFPLGFBQWE7SUFFeEI7O01BRUU7SUFDSyxNQUFNLENBQUMsdUJBQXVCLENBQUMsTUFBd0IsRUFBRSxNQUF1QjtRQUNyRixNQUFNLENBQUMsdUJBQXVCLENBQUMsV0FBVyxFQUFFLEdBQUcsRUFBRTtZQUMvQyxhQUFhLENBQUMsb0JBQW9CLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ3JELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOzs7T0FHRztJQUNJLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxNQUFrQixFQUFFLE1BQXVCO1FBQzVFLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRTtZQUMxQixNQUFNLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDckIsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzFCLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLEtBQUssYUFBYSxDQUFDLDBCQUEwQixDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDaEYsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDO2dCQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDL0MsTUFBTSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQzFCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOztNQUVF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